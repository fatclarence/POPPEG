<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <link rel="shortcut icon" href="#" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u"
        crossorigin="anonymous">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp"
        crossorigin="anonymous">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/"
        crossorigin="anonymous">
    <link rel="stylesheet" href="css/main.css" type="text/css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa"
        crossorigin="anonymous"></script>
    <script src="https://www.gstatic.com/firebasejs/5.8.0/firebase.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.6/popper.min.js"></script>
    <script>
        let multiplesImgArr = [];
        let multiplesVidArr = [];
        const emptyHeader = 
        `<div id="emptyHeader" class="col-md-12 col-xs-12 text-center standard-header">
            <span>Your cart is currently empty!</span>
        </div>
         `;
        let numberOfCards = 0;
        const validImages = [".jpg", ".jpeg"]; 
        const validVideos = [".mp4", ".mov"];
        var apiURL = "http://localhost:5000/";
        // var apiURL = "https://poppeg.com/";

        $(document).ready(() => {
            $('#addCardButton').on('click', (event) => {
                // when you add a new card, the emptyHeader must be removed
                if (document.getElementById("emptyHeader") !== null) {
                    $('#emptyHeader').remove();
                }
                // standard click add button, add to uploadContainer a card
                var $uploadContainer = $("#uploadContainer");
                $uploadContainer.append(addUploadContainer(numberOfCards))
                numberOfCards += 1;
                $("#uploadButton").attr("disabled", "disabled");
            });
            
            $('#uploadButton').on('click', (event) => {
                // checks if imageBlock and videoBlock fields all filled
                const numberOfMediaBlocks = $(".imageBlock").length;
                for (let i = 0; i < numberOfMediaBlocks; i++) {

                    // displays error messages
                    if (($(".imageBlock").children())[1 + i * 3].value == "") {
                        ($(".imageBlock").children())[2 + i * 3].style.display = "block";
                    }
                    if (($(".videoBlock").children())[1 + i * 3].value == "") {
                        ($(".videoBlock").children())[2 + i * 3].style.display = "block";
                    }

                }

                // if there are existing errors, disable the upload button. 
                checkErrors();
            });


            $(document).on('click', "button.delete-btn", (event) => {
                event.preventDefault();
                $(event.target).parent().parent().remove();
                // when empty, put back the empty header.
                if (document.getElementsByClassName("upload-card").length == 0) {
                    $("#uploadContainer").append($(emptyHeader));
                    $("#uploadButton").attr("disabled", "disabled");
                }
                let tempArrImg = [];
                let tempArrVid = [];
                let imageUploads = $('.image-upload');
                let vidUploads = $('.video-upload');
                
                // Video input changes and validations
                for (let i = 0; i < vidUploads.length; i++) {
                    const vidUploadId = vidUploads[i].id;
                    const vidFileValue = vidUploads[i].value;
                    const vidObj = {
                        [vidUploadId]: vidFileValue
                    };
                    tempArrVid.push(vidObj);
                }

                // Stores into tempArrImg objects which consist of all imageUploadIds and their file names
                for (let i = 0; i < imageUploads.length; i++) {
                    const imageUploadId = imageUploads[i].id;
                    const imageFileValue = imageUploads[i].value;
                    const imageObj = {
                        [imageUploadId]: imageFileValue
                    };
                    tempArrImg.push(imageObj);
                }

                // if all cards were removed, the multiples array should be emptied as well.
                if (tempArrVid.length == 0) {
                    multiplesVidArr = [];
                } else {
                    // find all the keys in tempArrVid with the same values
                    for (let k = 0; k < multiplesVidArr.length; k++) {
                        const compareItem = multiplesVidArr[k];
                        let elementsArr = tempArrVid.filter( entry => { 
                            return Object.values(entry) == multiplesVidArr[k]; 
                        } );
                        // only first element in the error will be a valid input.
                        if (elementsArr.length >= 1) {
                            const idNumber = Object.keys(elementsArr[0])[0][12];
                            ($(`#errorVid_${idNumber}`))[0].style.display = "none";
                        } else {}
                    }
                }

                // if all cards were removed, the multiples array should be emptied as well.
                if (tempArrImg.length == 0) {
                    multiplesImgArr = [];
                } else {
                    // find all the keys in tempArrImg with the same values
                    for (let k = 0; k < multiplesImgArr.length; k++) {
                        const compareItem = multiplesImgArr[k];
                        let elementsArr = tempArrImg.filter( entry => { 
                            return Object.values(entry) == multiplesImgArr[k]; 
                        } );
                        // only first element in the error will be a valid input.
                        if (elementsArr.length >= 1) {
                            const idNumber = Object.keys(elementsArr[0])[0][12];
                            ($(`#errorImg_${idNumber}`))[0].style.display = "none";
                        } else {}
                    }
                }

                // enable button momentarily if emptyHeader is not present 
                if (document.getElementById("emptyHeader") == null) {
                    $("#uploadButton").removeAttr("disabled", "disabled");
                } else {
                    $("#uploadButton").attr("disabled", "disabled");
                }
                
                // Check number of errors and enable/disable accordingly.
                checkErrors();
                
            });

            $(document).on('change', '.image-upload', (event) => {
                let temp_arr = [];
                let imageUploads = $('.image-upload');
                for (let i = 0; i < imageUploads.length; i++) {
                    temp_arr.push(imageUploads[i].value);
                }
                multiplesImgArr = multiplesImgArr.diff(temp_arr);
                let fileName = event.target.value;
                let fileId = event.target.id[12];
                let enableUpload = imgFileValidator(fileName, fileId);
                // After file validation, if file is valid, enable upload button, else disable
                if (enableUpload) {
                    $("#uploadButton").removeAttr("disabled", "disabled");
                } else {
                    $("#uploadButton").attr("disabled", "disabled");
                }
                emptyFilesChecker();
            });

            $(document).on('change', '.video-upload', (event) => {
                let tempArrVid = [];
                let vidUploads = $('.video-upload');
                for (let i = 0; i < vidUploads.length; i++) {
                    tempArrVid.push(vidUploads[i].value);
                }
                multiplesVidArr = multiplesVidArr.diff(tempArrVid);
                let fileName = event.target.value;
                let fileId = event.target.id[12];
                let enableUpload = vidFileValidator(fileName, fileId);
                // After file validation, if file is valid, enable upload button, else disable
                if (enableUpload) {
                    $("#uploadButton").removeAttr("disabled", "disabled");
                } else {
                    $("#uploadButton").attr("disabled", "disabled");
                }
                emptyFilesChecker();
            });
        });

        Array.prototype.diff = function(arr2) {
            let ret = [];
            // this refers to Array
            this.sort();
            arr2.sort();
            for(let i = 0; i < this.length; i++) {
                if(arr2.indexOf(this[i]) > -1){
                    ret.push(this[i]);
                }
            }
            return ret;
        };
        function checkErrors () {
            const allErrors = $('.error-msg');
            for(let j = 0; j < allErrors.length; j++) {
                // if there are still errors, the upload button shall be disabled.
                if (allErrors[j].style.display == "block") {
                    $("#uploadButton").attr("disabled", "disabled");
                    break;
                } else {}
            }
        }
        function imgFileValidator (fileName, uniqueId) {
            // Check if fileName exists
            if (fileName.length > 0) {
                // Check if file is already in the cart, prevent double submission
                
                if ((multiplesVidArr.filter(entry => entry == fileName)).length > 0) { // checks that file already exist 
                    $(`#errorImg_${uniqueId}`).html("This file is already in your cart! Please pick another .JPEG file.");
                    ($(`#errorImg_${uniqueId}`))[0].style.display = "block";
                    return false;
                } else { }
                // new unique file was posted 
                for (let i = 0; i < validImages.length; i++) {
                    const current_ext = validImages[i];
                    // if the file is of an invalid extension type.
                    if (fileName.substr(fileName.length - current_ext.length, fileName.length).toLowerCase() == current_ext.toLowerCase()) {
                        // return true if the file type is jpg or jpeg
                        ($(`#errorImg_${uniqueId}`))[0].style.display = "none";
                        multiplesVidArr.push(fileName);
                        return true; 
                    } else {}
                }
                // if does not equal to any file extension, throw error.
                $(`#errorImg_${uniqueId}`).html("Invalid file type. Please upload a .JPEG file.");
                ($(`#errorImg_${uniqueId}`))[0].style.display = "block";
                return false;
            } else {
                // Checks if file is empty.
                $(`#errorImg_${uniqueId}`).html("You must provide a valid .JPEG file!");
                ($(`#errorImg_${uniqueId}`))[0].style.display = "block";
                return false; 
            }
        }

        function vidFileValidator (fileName, uniqueId) {
            // Check if fileName exists
            if (fileName.length > 0) {
                // Check if file is already in the cart, prevent double submission
                
                if ((multiplesVidArr.filter(entry => entry == fileName)).length > 0) { // checks that file already exist 
                    $(`#errorVid_${uniqueId}`).html("This file is already in your cart! Please pick another .mp4 or .mov file.");
                    ($(`#errorVid_${uniqueId}`))[0].style.display = "block";
                    return false;
                } else { }
                // new unique file was posted 
                for (let i = 0; i < validVideos.length; i++) {
                    const current_ext = validVideos[i];
                    // if the file is of an invalid extension type.
                    if (fileName.substr(fileName.length - current_ext.length, fileName.length).toLowerCase() == current_ext.toLowerCase()) {
                        // return true if the file type is mp4
                        ($(`#errorVid_${uniqueId}`))[0].style.display = "none";
                        multiplesVidArr.push(fileName);
                        return true; 
                    } else {}
                }
                // if does not equal to any file extension, throw error.
                $(`#errorVid_${uniqueId}`).html("Invalid file type. Please upload a .mp4 or .mov file.");
                ($(`#errorVid_${uniqueId}`))[0].style.display = "block";
                return false;
            } else {
                // Checks if file is empty.
                $(`#errorVid_${uniqueId}`).html("You must provide a valid .mp4 or .mov file!");
                ($(`#errorVid_${uniqueId}`))[0].style.display = "block";
                return false; 
            }
        }

        function emptyFilesChecker () {
            let imageUploads = $(".image-upload");
            let vidUploads = $(".video-upload");
            for (let i = 0; i < imageUploads.length; i++) {
                if (vidUploads[i].value == "" || imageUploads[i].value == "") {
                    $("#uploadButton").attr("disabled", "disabled");
                } else {}
            }
        }

        function addUploadContainer(numberOfCards) {
            let html =
                `<div class="row upload-card" id="cardTemplate_${numberOfCards}" style="margin-bottom: 15px;">
                    <div class="col-xs-12 col-md-5 col-lg-5 media-block imageBlock">
                        <label for="imageUpload_${numberOfCards}">Image: </label> 
                        <input class="image-upload" id="imageUpload_${numberOfCards}" type="file" accept="image/*" style="display: inline;">
                            <div class="error-msg" id="errorImg_${numberOfCards}">Please input a valid file!</div>
                        </input>
                    </div>
                    <div class="col-xs-12 col-md-5 col-lg-5 media-block videoBlock">
                        <label for="videoUpload_${numberOfCards}">Video: </label> 
                        <input class="video-upload" id="videoUpload_${numberOfCards}" type="file" accept="video/*" style="display: inline;">
                            <div class="error-msg" id="errorVid_${numberOfCards}">Please input a valid file!</div>
                        </input>
                    </div>
                    <div class="col-xs-1 col-md-1 col-lg-1">
                        <button id="deleteButton_${numberOfCards}" class="delete-btn" type="button">X</button>
                    </div>
                </div>`
            return html;
        }

    </script>
</head>

<body>
    <div class="row">
        <div class="col-xs-12 col-md-6 col-lg-4 col-md-offset-3 col-lg-offset-4">
            <img src="media/poppeg_strip_vector.png" class="poppeg-logo img-fluid" alt="Responsive image" style="width: 100%" />
        </div>
    </div>
    <div class="row">
        <div class="container" id="uploadContainer">
            <div id="emptyHeader" class="col-md-12 col-xs-12 text-center standard-header">
                <span>Your cart is currently empty!</span>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12 col-md-2 col-lg-2 col-md-offset-4 col-lg-offset-4">
            <button id="addCardButton" type="button" class="btn btn-green btn-block btn-lg" style="margin-top:15px">
                Add New Card
            </button>
        </div>
        <div class="col-xs-12 col-md-2 col-lg-2">
            <button id="uploadButton" type="button" class="btn btn-red btn-block btn-lg" style="margin-top:15px" disabled="disabled">
                Upload Now!
            </button>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12 col-md-6 col-lg-4 col-lg-offset-4" style="margin-top: 30px">
            <p><span class="text-white footer">A Project by POPPEG</span></p>
        </div>
    </div>
</body>